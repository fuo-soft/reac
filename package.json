{
	"name": "reac",
	"displayName": "REgex-based Auto Correct",
	"description": "auto-correct",
	"version": "0.0.1",
	"publisher": "fuo-soft",
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/fuo-soft/reac"
	},
	"funding": "https://www.buymeacoffee.com/fuosoft",
	"engines": {
		"vscode": "^1.83.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:type"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "reac.performAutoCorrect",
				"category": "reac",
				"title": "Performs auto-correction on the selected text or the word preceding the caret"
			}
		],
		"configuration": {
			"type": "object",
			"title": "reac",
			"properties": {
				"reac.triggerPattern": {
					"type": "string",
					"default": "\\W"
				},
				"reac.wordPattern": {
					"type": "string",
					"default": "\\w+$"
				},
				"reac.replacers": {
					"type": "array",
					"default": [
						{
							"languages": [
								".*"
							],
							"patterns": [
								[
									"[A-Z]{2}[a-z]+",
									"$&",
									"t",
									"FIxes my HEavy SHift KEy"
								],
								[
									"([a-z])\\1{2,}",
									"$1$1",
									"igsp",
									"toooo many"
								]
							]
						},
						{
							"languages": [
								"(java|type)script(react)?|c(pp|sharp)?|java"
							],
							"patterns": [
								[
									"pirate",
									"private"
								],
								[
									"pubic",
									"public"
								],
								[
									"c(nost|osnt|onts)",
									"const"
								]
							]
						},
						{
							"languages": [
								"markdown|plaintext"
							],
							"patterns": [
								[
									"abuot",
									"about",
									"ip"
								],
								[
									"atfer",
									"after",
									"ip"
								],
								[
									"agian(st)?",
									"again$1",
									"ip"
								],
								[
									"aslo",
									"also",
									"ip"
								],
								[
									"([bnmst])a",
									"a$1",
									"ip"
								],
								[
									"e([bhmlsw])",
									"$1e",
									"ip"
								],
								[
									"([ps])u",
									"u$1",
									"ip"
								],
								[
									"([fnst])i",
									"i$1",
									"ip"
								],
								[
									"([fhnr])o",
									"o$1",
									"ip"
								],
								[
									"o([gst])",
									"$1o",
									"ip"
								],
								[
									"([hmps])u",
									"u$1",
									"ip"
								],
								[
									"([bcfghtw])([ai])l",
									"$1$2ll",
									"ip"
								],
								[
									"([kstw])il",
									"$1ill",
									"ip"
								],
								[
									"([fht])l?al",
									"$1ll",
									"ip"
								],
								[
									"([bcgw])l?al(ed)?",
									"$1all$2",
									"ip"
								],
								[
									"([bdghps])l?il",
									"$1ill",
									"ip"
								],
								[
									"([fkmtw])l?il(ed)?",
									"$1ill$3",
									"ip"
								],
								[
									"a([dty])n",
									"an$1",
									"ip"
								],
								[
									"(fro?|ofr|orf)",
									"for",
									"ip",
									"i'm on the fence about including 'fro' as a mispelling"
								],
								[
									"ti(s)?",
									"it$1",
									"ip"
								],
								[
									"([br]a)t(le|el)",
									"$1tt$2",
									"ip"
								],
								[
									"(bl?|cr|f[lr]?|qu|[hjlmprt]|s[hlmn]?|tr?|w[hr])(cak|akc)",
									"$1ack",
									"ip"
								],
								[
									"(ch|[dhn]|wr)(cek|ekc)",
									"$1eck",
									"ip"
								],
								[
									"(b[ru]|c[hlr]|fl|k[ln]?|pr?|qu|s[hlnptw]?|t[hrw]?|[dhlmnrw])(cik|ikc)",
									"$1ick",
									"ip"
								],
								[
									"(b[lr]?|c[hlr]?|[dhjlmnr]|f[lr]|kn|pl?|s[hlmnpt]?|tr?)(cok|okc)",
									"$1ock",
									"ip"
								],
								[
									"([bdfhjlmry]|c[hlr]?|gl?|kl|pl?|s[hnt]?|tr?)(cuk|ukc)",
									"$1uck",
									"ip"
								],
								[
									"((br?|pr?|s[pw]?|t[rw]?|[cnrw])a|([bgp]r|kn?|[lmv]|pr|s[hkmnp]|tw?|wh)i|([fkmnp]|sp?)e|([bdhmprt]|cr|sp)o|([bcgr]|dr|s[ch]?)u)tle",
									"$1ttle",
									"ip"
								],
								[
									"(teh|hte|t[he])([bmouy])?",
									"the$2",
									"ip"
								],
								[
									"lie([cfgklmntv])",
									"li$1e",
									"ip"
								],
								[
									"(teh|hte|th)n",
									"then",
									"ip",
									"Special case: 'ten' is a word"
								],
								[
									"th?e([mrs])e?",
									"the$1e",
									"ip"
								],
								[
									"w(ehn|hne)",
									"when",
									"ip"
								]
							]
						}
					]
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/mocha": "^10.0.1",
		"@types/node": "16.x",
		"@types/vscode": "^1.83.0",
		"@typescript-eslint/eslint-plugin": "^6.4.1",
		"@typescript-eslint/parser": "^6.4.1",
		"@vscode/test-electron": "^2.3.4",
		"eslint": "^8.47.0",
		"glob": "^10.3.3",
		"mocha": "^10.2.0"
	}
}
